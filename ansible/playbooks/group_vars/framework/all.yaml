---
dotfiles_source_dir: "{{ playbook_dir }}/../files/framework/dots"
bin_source_dir: "{{ playbook_dir }}/../files/framework/bin"
modules:
  - name: base packages
    tag: bp
    packages:
      - name: reflector
        state: latest
        source: pacman
      - name: acpi
        state: latest
        source: pacman
      - name: pkgfile
        state: latest
        source: pacman
      - name: base-devel
        state: latest
        source: pacman
      - name: openssh
        state: latest
        source: pacman
      - name: git
        state: latest
        source: pacman
      - name: git-lfs
        state: latest
        source: pacman
      - name: htop
        state: latest
        source: pacman
      - name: dnsutils
        state: latest
        source: pacman
      - name: traceroute
        state: latest
        source: pacman
      - name: powertop
        state: latest
        source: pacman
      - name: nmap
        state: latest
        source: pacman
      - name: tree
        state: latest
        source: pacman
      - name: unzip
        state: latest
        source: pacman
      - name: radeontop
        state: latest
        source: pacman
      - name: libva-utils
        state: latest
        source: pacman
      - name: wireless-regdb
        state: latest
        source: pacman
      - name: pipewire
        state: latest
        source: pacman
      - name: wireplumber
        state: latest
        source: pacman
      - name: cliphist
        state: latest
        source: pacman
      - name: less
        state: latest
        source: pacman
      - name: btop
        state: latest
        source: pacman
      - name: paru
        state: latest
        source: aur
      - name: framework-system
        state: latest
        source: pacman
      - name: xorg-xauth
        state: latest
        source: pacman
      - name: nix
        state: latest
        source: pacman
    line_in_file:
      - regexp: ^WIRELESS_REGDOM=.*
        line: WIRELESS_REGDOM="PL"
        path: /etc/conf.d/wireless-regdom
        become: true
    links:
      - src: "{{ dotfiles_source_dir }}/btop/btop.conf"
        dest: "{{ configs_home }}/btop/btop.conf"
    commands:
      - name: Disable headset auto switch
        cmd: wpctl settings --save bluetooth.autoswitch-to-headset-profile false
        set_fact: wpctl settings bluetooth.autoswitch-to-headset-profile
        when_not_stdout: "Value: false (Saved: false)"
  - name: fonts
    tag: f
    packages:
      - name: font-manager
        state: latest
        source: pacman
      - name: ttf-iosevka-nerd
        state: latest
        source: pacman
  - name: yazi
    tag: yazi
    packages:
      - name: yazi
        state: latest
        source: pacman
    links:
      - src: "{{ dotfiles_source_dir }}/yazi/theme.toml"
        dest: "{{ configs_home }}/yazi/theme.toml"
  - name: colors
    tag: cc
    packages:
      - name: hyprpaper
        state: latest
        source: pacman
      - name: wallust-git
        source: aur
        state: latest
      - name: matugen-git
        source: aur
        state: latest
      - name: pywalfox
        source: pip
        version: 2.7.4
    links:
      - src: "{{ dotfiles_source_dir }}/wallust"
        dest: "{{ configs_home }}/wallust"
        # generate the theme stubs
        notify:
          - wallust
      - src: "{{ bin_source_dir }}/wallust/solid-theme.sh"
        dest: "{{ binaries_home }}/wallust-solid-theme.sh"
      - src: "{{ bin_source_dir }}/wallust/wallpaper-theme.sh"
        dest: "{{ binaries_home }}/wallust-wallpaper-theme.sh"
      - src: "{{ bin_source_dir }}/wallust/reload.sh"
        dest: "{{ binaries_home }}/wallust-reload.sh"
      - src: "{{ bin_source_dir }}/wallust/random-wallpaper.sh"
        dest: "{{ binaries_home }}/random-wallpaper.sh"
      - src: "{{ bin_source_dir }}/wallust/random-solid-theme.sh"
        dest: "{{ binaries_home }}/random-solid-theme.sh"
      - src: "{{ bin_source_dir }}/wallust/random-theme.sh"
        dest: "{{ binaries_home }}/random-theme.sh"
      - src: "{{ bin_source_dir }}/wallust/wallust-wrapper.sh"
        dest: "{{ binaries_home }}/wallust-wrapper.sh"
      - src: "{{ bin_source_dir }}/wallust/matugen-wrapper.sh"
        dest: "{{ binaries_home }}/matugen-wrapper.sh"
      - src: "{{ bin_source_dir }}/wallust/adjust-current-theme.sh"
        dest: "{{ binaries_home }}/wallust-adjust-current-theme.sh"
      - src: "{{ bin_source_dir }}/wallust/calibre.sh"
        dest: "{{ binaries_home }}/wallust-calibre.sh"
      - src: "{{ dotfiles_source_dir }}/matugen"
        dest: "{{ configs_home }}/matugen"
        # generate the theme stubs
        notify:
          - matugen
      - src: "{{ firefox.profile }}"
        dest: "{{ east_links }}/firefox_profile"
      - src: "{{ bin_source_dir }}/hyprpaper/control.sh"
        dest: "{{ binaries_home }}/control-hyprpaper.sh"
    udev:
      - rule: >-
          SUBSYSTEM=="power_supply", ATTR{type}=="Mains", ACTION=="change", RUN+="/usr/bin/systemd-run --machine={{ ansible_user_id
          }}@.host --user /home/{{ ansible_user_id }}/.bin/random-theme.sh"
    custom_systemd_services:
      - name: hyprpaper
        description: Run hyprpaper daemon for IPC wallpaper handling
        exec_start: hyprpaper
        type: exec
        restart:
          mode: on-failure
          sec: 5
        start:
          limit_burst: 10
          limit_interval_sec: 5
        wanted_by: "{{ systemd.targets.hyprland_custom_session }}"
        part_of: "{{ systemd.targets.hyprland_custom_session }}"
        after:
          - "{{ systemd.targets.hyprland_custom_session }}"
  - name: browsers
    tag: b
    packages:
      - name: firefox
        state: latest
        source: pacman
    links:
      - src: "{{ dotfiles_source_dir }}/firefox/chrome/userChrome.css"
        dest: "{{ firefox.profile }}/chrome/userChrome.css"
      - src: "{{ dotfiles_source_dir }}/firefox/chrome/userContent.css"
        dest: "{{ firefox.profile }}/chrome/userContent.css"
      - src: "{{ dotfiles_source_dir }}/mozilla/native-messaging-hosts/pywalfox.json"
        dest: "{{ firefox.native_messaging_hosts }}/pywalfox.json"
  - name: terminal
    tag: t
    packages:
      - name: kitty
        state: latest
        source: pacman
    links:
      - src: "{{ dotfiles_source_dir }}/kitty"
        dest: "{{ configs_home }}/kitty"
  - name: dev
    tag: d
    packages:
      - name: golang
        source: asdf
        repository: https://github.com/kennyp/asdf-golang.git
        versions:
          - latest
        global: latest
      - name: uv
        source: asdf
        repository: https://github.com/asdf-community/asdf-uv.git
        versions:
          - latest
        global: latest
      - name: typos
        source: asdf
        repository: https://github.com/aschiavon91/asdf-typos.git
        versions:
          - latest
        global: latest
      - name: golangci-lint
        source: asdf
        repository: ""
        versions:
          - latest
        global: latest
      - name: goreleaser
        source: asdf
        repository: https://github.com/kforsthoevel/asdf-goreleaser.git
        versions:
          - latest
        global: latest
      - name: python
        source: asdf
        repository: ""
        versions:
          - 3.9.0
        global: 3.9.0
      - name: nodejs
        source: asdf
        repository: https://github.com/asdf-vm/asdf-nodejs.git
        versions:
          - latest
        global: latest
      - name: rustup
        state: latest
        source: pacman
      - name: "@anthropic-ai/claude-code"
        global: true
        version: 1.0.89
        source: npm
      - name: "@openai/codex"
        global: true
        version: "0.23.0"
        source: npm
      - name: python-build
        source: pacman
        state: latest
      - name: python-installer
        source: pacman
        state: latest
      - name: python-wheel
        source: pacman
        state: latest
      - name: build
        source: pip
        version: 1.3.0
      - name: installer
        source: pip
        version: "0.7.0"
      - name: wheel
        source: pip
        version: "0.45.1"
      - name: docker
        state: latest
        source: pacman
      - name: docker-compose
        state: latest
        source: pacman
      - name: docker-buildx
        state: latest
        source: pacman
    users:
      - name: "{{ ansible_user_id }}"
        groups: docker
  - name: hyprland
    tag: h
    packages:
      - name: hyprland
        state: latest
        source: pacman
      - name: hyprsunset
        state: latest
        source: pacman
      - name: hyprlock
        state: latest
        source: pacman
      - name: hyprpolkitagent
        state: latest
        source: pacman
      - name: qt5-wayland
        state: latest
        source: pacman
      - name: qt6-wayland
        state: latest
        source: pacman
      - name: qt6ct-kde
        state: latest
        source: aur
      - name: breeze-icons
        state: latest
        source: pacman
      - name: papirus-icon-theme
        state: latest
        source: pacman
      - name: breeze
        state: latest
        source: pacman
      - name: breeze5
        state: latest
        source: pacman
      - name: adw-gtk-theme
        state: latest
        source: pacman
      - name: plasma-integration
        state: latest
        source: pacman
      - name: kde-cli-tools
        state: latest
        source: pacman
      - name: waybar
        state: latest
        source: pacman
      - name: rofi-wayland
        state: latest
        source: pacman
      - name: blueman-git
        state: latest
        source: aur
      - name: udiskie
        state: latest
        source: pacman
      - name: archlinux-xdg-menu
        state: latest
        source: pacman
      - name: dolphin
        state: latest
        source: pacman
      - name: brightnessctl
        state: latest
        source: pacman
      - name: playerctl
        state: latest
        source: pacman
      - name: xdg-user-dirs
        state: latest
        source: pacman
      - name: xdg-desktop-portal-hyprland
        state: latest
        source: pacman
    users:
      - name: "{{ ansible_user_id }}"
        groups: video,input
    links:
      - src: "{{ dotfiles_source_dir }}/hypr"
        dest: "{{ configs_home }}/hypr"
      - src: "{{ dotfiles_source_dir }}/hyprdynamicmonitors"
        dest: "{{ configs_home }}/hyprdynamicmonitors"
      - src: "{{ dotfiles_source_dir }}/hyprwhenthen"
        dest: "{{ configs_home }}/hyprwhenthen"
      - src: "{{ dotfiles_source_dir }}/gtk-4.0"
        dest: "{{ configs_home }}/gtk-4.0"
      - src: "{{ dotfiles_source_dir }}/gtk-3.0"
        dest: "{{ configs_home }}/gtk-3.0"
      - src: "{{ dotfiles_source_dir }}/qt5ct/qt5ct.conf"
        dest: "{{ configs_home }}/qt5ct/qt5ct.conf"
      - src: "{{ dotfiles_source_dir }}/qt6ct/qt6ct.conf"
        dest: "{{ configs_home }}/qt6ct/qt6ct.conf"
      - src: "{{ dotfiles_source_dir }}/electron/electron-flags.conf"
        dest: "{{ configs_home }}/electron-flags.conf"
      - src: "{{ dotfiles_source_dir }}/xdg/user-dirs.dirs"
        dest: "{{ configs_home }}/user-dirs.dirs"
      - src: "{{ bin_source_dir }}/hypr/import-env.sh"
        dest: "{{ binaries_home }}/import-env.sh"
      - src: "{{ bin_source_dir }}/hypr/adjust-refresh-rate.sh"
        dest: "{{ binaries_home }}/adjust-refresh-rate.sh"
      - src: "{{ bin_source_dir }}/hypr/adjust-hypr-settings.sh"
        dest: "{{ binaries_home }}/adjust-hypr-settings.sh"
      - src: "{{ dotfiles_source_dir }}/waybar"
        dest: "{{ configs_home }}/waybar"
      - src: "{{ bin_source_dir }}/waybar/start.sh"
        dest: "{{ binaries_home }}/waybar_start.sh"
      - src: "{{ dotfiles_source_dir }}/rofi"
        dest: "{{ configs_home }}/rofi"
      - src: "{{ bin_source_dir }}/rofi/run.sh"
        dest: "{{ binaries_home }}/rofi-run.sh"
      - src: "{{ bin_source_dir }}/rofi/theme-selector.sh"
        dest: "{{ binaries_home }}/theme-selector.sh"
      - src: "{{ bin_source_dir }}/rofi/calc.sh"
        dest: "{{ binaries_home }}/rofi-calc.sh"
      - src: "{{ bin_source_dir }}/rofi/websearch.sh"
        dest: "{{ binaries_home }}/rofi-websearch.sh"
      - src: "{{ bin_source_dir }}/rofi/github.sh"
        dest: "{{ binaries_home }}/rofi-github.sh"
      - src: "{{ bin_source_dir }}/hypr/focus-browser.sh"
        dest: "{{ binaries_home }}/hypr-focus-browser.sh"
    custom_systemd_services:
      - name: "{{ systemd.targets.hyprland_custom_session }}"
        description: A target for other services when hyprland becomes ready
        empty_install: true
        empty_service: true
        after:
          - "{{ systemd.targets.graphical_session_pre }}"
        binds_to: "{{ systemd.targets.graphical_session }}"
        wants:
          - "{{ systemd.targets.graphical_session_pre }}"
      - name: hyprdynamicmonitors
        description: Run hyprdynamicmonitors daemon
        exec_start: "{{ binaries_home }}/hyprdynamicmonitors --debug"
        type: exec
        restart:
          mode: on-failure
          sec: 5
        start:
          limit_burst: 60
          limit_interval_sec: 5
        wanted_by: "{{ systemd.targets.hyprland_custom_session }}"
        part_of: "{{ systemd.targets.hyprland_custom_session }}"
        after:
          - "{{ systemd.targets.hyprland_custom_session }}"
          - "{{ systemd.targets.dbus_socket }}"
        requires:
          - "{{ systemd.targets.dbus_socket }}"
      - name: hyprwhenthen
        description: Run hyprwhenthen daemon
        exec_start: "{{ binaries_home }}/hyprwhenthen run"
        type: exec
        restart:
          mode: on-failure
          sec: 5
        start:
          limit_burst: 60
          limit_interval_sec: 5
        wanted_by: "{{ systemd.targets.hyprland_custom_session }}"
        part_of: "{{ systemd.targets.hyprland_custom_session }}"
        after:
          - "{{ systemd.targets.hyprland_custom_session }}"
      - name: waybar-top
        description: Run waybar top bar
        exec_start: "{{ binaries_home }}/waybar_start.sh"
        type: exec
        restart:
          mode: on-failure
          sec: 5
        start:
          limit_burst: 10
          limit_interval_sec: 5
        wanted_by: "{{ systemd.targets.hyprland_custom_session }}"
        part_of: "{{ systemd.targets.hyprland_custom_session }}"
        after:
          - "{{ systemd.targets.hyprland_custom_session }}"
  - name: info
    tag: info
    packages:
      - name: man
        state: latest
        source: pacman
      - name: tldr
        version: 3.4.1
        source: pip
  - name: image
    tag: im
    packages:
      - name: gimp
        state: latest
        source: pacman
  - name: video
    tag: video
    packages:
      - name: vlc-git
        state: latest
        source: aur
        helper: paru
      - name: vhs
        state: latest
        source: pacman
      - name: ttyd
        state: latest
        source: pacman
  - name: screenshot
    tag: ss
    packages:
      - name: hyprpicker
        state: latest
        source: pacman
      - name: grim
        state: latest
        source: pacman
      - name: jq
        state: latest
        source: pacman
      - name: slurp
        state: latest
        source: pacman
      - name: gnome-screenshot
        state: latest
        source: pacman
      - name: scrot
        state: latest
        source: pacman
      - name: hyprshot-git
        state: latest
        source: aur
      - name: wl-screenrec-git
        state: latest
        source: aur
        helper: paru
      - name: satty
        state: latest
        source: pacman
    links:
      - src: "{{ dotfiles_source_dir }}/satty"
        dest: "{{ configs_home }}/satty"
  - name: mako
    tag: mako
    packages:
      - name: mako
        state: latest
        source: pacman
    directories:
      - path: "{{ configs_home }}/mako"
    files:
      - src: "{{ dotfiles_source_dir }}/mako/config"
        dest: "{{ configs_home }}/mako/config"
        force: true
        notify:
          - reload mako
  - name: tmux
    tag: tm
    packages:
      - name: tmux
        state: latest
        source: pacman
      - name: tmuxp
        state: latest
        source: pacman
    git_repos:
      - repo: https://github.com/tmux-plugins/tpm.git
        dest: "{{ configs_home }}/tmux/plugins/tpm"
    links:
      - src: "{{ dotfiles_source_dir }}/tmux/theme.tmux"
        dest: "{{ configs_home }}/tmux/theme.tmux"
      - src: "{{ dotfiles_source_dir }}/tmux/.tmux.conf"
        dest: "{{ configs_home }}/tmux/tmux.conf"
      - src: "{{ linux_source_dir }}/bin/tmux-switch.sh"
        dest: "{{ binaries_home }}/tmux-switch.sh"
      - src: "{{ linux_source_dir }}/bin/tmux-window-switch.sh"
        dest: "{{ binaries_home }}/tmux-window-switch.sh"
      - src: "{{ linux_source_dir }}/bin/tmux-update-display.sh"
        dest: "{{ binaries_home }}/tmux-update-display.sh"
      - src: "{{ dotfiles_source_dir }}/tmuxp"
        dest: "{{ configs_home }}/tmuxp"
  - name: git
    tag: g
    git_config:
      - name: user.email
        value: filipmikina@gmail.com
        scope: global
      - name: user.name
        value: Filip Mikina
        scope: global
      - name: alias.back
        value: checkout -
        scope: global
      - name: alias.m
        value: checkout main
        scope: global
  - name: nvim
    tag: nvim
    git_config:
      - name: core.editor
        value: nvim
        scope: global
    packages:
      - name: fzf
        state: latest
        source: pacman
      - name: fd
        state: latest
        source: pacman
      - name: ripgrep
        state: latest
        source: pacman
      - name: lazygit
        state: latest
        source: pacman
      - name: neovim
        state: latest
        source: pacman
    links:
      - src: "{{ dotfiles_source_dir }}/nvim"
        dest: "{{ configs_home }}/nvim"
      - src: "{{ dotfiles_source_dir }}/lazygit/config.yaml"
        dest: "{{ configs_home }}/lazygit/config.yml"
  - name: zsh
    tag: z
    packages:
      - name: zsh
        source: pacman
        state: latest
      - name: zoxide
        source: asdf
        repository: https://github.com/nyrst/asdf-zoxide.git
        versions:
          - latest
        global: latest
      - name: exa
        source: asdf
        repository: https://github.com/nyrst/asdf-exa.git
        versions:
          - latest
        global: latest
    git_repos:
      - repo: https://github.com/robbyrussell/oh-my-zsh.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh"
      - repo: https://github.com/Aloxaf/fzf-tab.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/fzf-tab"
      - repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting"
      - repo: https://github.com/unixorn/fzf-zsh-plugin.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/fzf-zsh-plugin"
        version: main
      - repo: https://github.com/romkatv/powerlevel10k.git
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/themes/powerlevel10k"
    users:
      - name: "{{ ansible_user_id }}"
        shell: /usr/bin/zsh
    links:
      - src: "{{ dotfiles_source_dir }}/zsh/.zshrc"
        dest: "{{ ansible_env.HOME }}/.zshrc"
      - src: "{{ dotfiles_source_dir }}/zsh/.p10k.zsh"
        dest: "{{ ansible_env.HOME }}/.p10k.zsh"
      - src: "{{ dotfiles_source_dir }}/zsh/config.d"
        dest: "{{ configs_home }}/zsh/config.d"
      - src: "{{ dotfiles_source_dir }}/fzf/.fzf.zsh"
        dest: "{{ ansible_env.HOME }}/.fzf.zsh"
      - src: "{{ dotfiles_source_dir }}/fzf/.fzf.zsh"
        dest: "{{ ansible_env.HOME }}/fzf.zsh"
  - name: prep home layout
    tag: dd
    directories:
      - path: "{{ repos.personal_home }}"
      - path: "{{ repos.external_home }}"
      - path: "{{ repos.work_home }}"
  - name: note taking
    tag: note
    packages:
      - name: obsidian
        state: latest
        source: pacman
    links:
      - src: "{{ linux_source_dir }}/bin/md-toc"
        dest: "{{ binaries_home }}/md-toc"
    git_repos:
      - repo: ssh://git@git.home:12222/fiffeek/brain.git
        dest: "{{ repos.personal_home }}/brain"
  - name: personal repos
    tag: repo
    git_repos:
      - repo: ssh://git@git.home:12222/fiffeek/homelab.git
        dest: "{{ repos.personal_home }}/homelab"
        version: main
      - repo: git@github.com:fiffeek/wallpaper.git
        dest: "{{ repos.personal_home }}/wallpaper"
  - name: forks and external repos
    tag: repo
    git_repos:
      - repo: git@github.com:fiffeek/searxng.git
        dest: "{{ repos.external_home }}/searxng"
  - name: misc scrips
    tag: bin
    links:
      - src: "{{ linux_source_dir }}/bin/av_decrypt"
        dest: "{{ binaries_home }}/av_decrypt"
      - src: "{{ linux_source_dir }}/bin/av_encrypt"
        dest: "{{ binaries_home }}/av_encrypt"
      - src: "{{ linux_source_dir }}/bin/backup"
        dest: "{{ binaries_home }}/backup"
      - src: "{{ linux_source_dir }}/bin/kvm.sh"
        dest: "{{ binaries_home }}/kvm.sh"
  - name: power
    tag: pow
    packages:
      # https://stackoverflow.com/questions/71369726/no-module-named-gi
      - name: gobject-introspection
        state: latest
        source: pacman
      - name: pygobject
        version: 3.52.3
        source: pip
      - name: power-profiles-daemon
        state: latest
        source: pacman
      - name: cpupower
        state: latest
        source: pacman
      - name: hwinfo
        state: latest
        source: pacman
    files:
      - src: "{{ dotfiles_source_dir }}/power/wifi-powersave.conf"
        dest: /etc/NetworkManager/conf.d/wifi-powersave.conf
        force: false
    passwordless:
      - exec: /usr/bin/cpupower
      - exec: /usr/bin/powerprofilesctl
      - exec: /usr/bin/tee /sys/class/drm/card1/device/power_dpm_force_performance_level
      - exec: /usr/bin/systemctl
      - exec: /usr/bin/sed -i s/2/3/ /etc/NetworkManager/conf.d/wifi-powersave.conf
      - exec: /usr/bin/sed -i s/3/2/ /etc/NetworkManager/conf.d/wifi-powersave.conf
      - exec: /usr/bin/tee /sys/module/pcie_aspm/parameters/policy
      - exec: /usr/bin/powertop
      - exec: /usr/bin/nmcli
      - exec: /usr/bin/tee /sys/devices/system/cpu/cpu*/cpufreq/energy_performance_preference
    udev:
      - rule: >-
          SUBSYSTEM=="power_supply", ATTR{online}=="0", ATTR{type}=="Mains", ACTION=="change", RUN+="/usr/bin/systemd-run
          --machine={{ ansible_user_id }}@.host --user /home/{{ ansible_user_id }}/.bin/set-power-profile.sh powersaver"
      - rule: >-
          SUBSYSTEM=="power_supply", ATTR{online}=="1", ATTR{type}=="Mains", ACTION=="change", RUN+="/usr/bin/systemd-run
          --machine={{ ansible_user_id }}@.host --user /home/{{ ansible_user_id }}/.bin/set-power-profile.sh performance"
    line_in_file:
      - regexp: ^options iwlwifi.*
        line: options iwlwifi power_save=Y power_level=1 uapsd_disable=0 led_mode=3
        path: /etc/modprobe.d/iwlwifi.conf
        become: true
        should_create: true
      - regexp: ^options iwlmvm.*
        line: options iwlmvm power_scheme=3
        path: /etc/modprobe.d/iwlwifi.conf
        become: true
        should_create: true
      # disable bluetooth on startup
      - regexp: .*AutoEnable=.*
        line: AutoEnable=false
        path: /etc/bluetooth/main.conf
        become: true
        should_create: false
    links:
      - src: "{{ bin_source_dir }}/power/set-power-profile.sh"
        dest: "{{ binaries_home }}/set-power-profile.sh"
      - src: "{{ bin_source_dir }}/power/power-profile-on-boot.sh"
        dest: "{{ binaries_home }}/power-profile-on-boot.sh"
    directories:
      - path: /home/{{ ansible_user_id }}/.config/systemd/user
    custom_systemd_services:
      - name: power-profile-on-boot
        description: Change power profile on system boot
        exec_start: "{{ binaries_home }}/power-profile-on-boot.sh"
  - name: grub
    tag: grub
    packages:
      - name: plymouth
        state: latest
        source: pacman
    line_in_file:
      - regexp: GRUB_CMDLINE_LINUX_DEFAULT=.*
        line: GRUB_CMDLINE_LINUX_DEFAULT="quiet splash log_level=3 pcie_aspm=force"
        path: /etc/default/grub
        become: true
        should_create: false
        notify:
          - grub-mkconfig
      - regexp: ^HOOKS=.*
        line: >-
          HOOKS=(base udev plymouth autodetect microcode modconf kms keyboard keymap consolefont block encrypt filesystems
          fsck)
        path: /etc/mkinitcpio.conf
        become: true
        should_create: false
        notify:
          - mkinitcpio
  - name: gaming
    tag: game
    packages:
      - name: mesa-demos
        state: latest
        source: pacman
      - name: vulkan-tools
        state: latest
        source: pacman
      - name: gamescope
        state: latest
        source: pacman
      - name: vulkan-radeon
        state: latest
        source: pacman
      - name: amdvlk
        state: absent
        source: pacman
      - name: lib32-amdvlk
        state: absent
        source: pacman
      - name: lib32-vulkan-radeon
        state: latest
        source: pacman
      - name: ttf-liberation
        state: latest
        source: pacman
      - name: lib32-amdgpu-pro-oglp
        state: latest
        source: aur
        helper: paru
      - name: steam
        state: latest
        source: pacman
      - name: protonup-qt-bin
        state: latest
        source: aur
        helper: paru
      - name: innoextract
        state: latest
        source: pacman
    git_repos:
      - repo: https://aur.archlinux.org/vcmi.git
        dest: "{{ repos.external_home }}/vcmi"
        version: master
        diff: "{{ repos.diffs_source }}/vcmi/master.diff"
        makepkg: true
  - name: reading software
    tag: read
    packages:
      - name: calibre-bin
        state: latest
        source: aur
        helper: paru
  - name: playing with x
    tag: x
    packages:
      - name: tk
        state: latest
        source: pacman
      - name: xorg-server-xvfb
        state: latest
        source: pacman
      - name: x11vnc
        state: latest
        source: pacman
      - name: remmina
        state: latest
        source: pacman
      - name: libvncserver
        state: latest
        source: pacman
      - name: openbox
        state: latest
        source: pacman
      - name: libxkbcommon-x11
        state: latest
        source: pacman
      - name: xcb-util-cursor
        state: latest
        source: pacman
      - name: xcb-util-wm
        state: latest
        source: pacman
      - name: xcb-util-image
        state: latest
        source: pacman
      - name: xcb-util-keysyms
        state: latest
        source: pacman
      - name: xcb-util-renderutil
        state: latest
        source: pacman
  - name: tts
    tag: tts
    directories:
      - path: "{{ configs_home }}/nerd-dictation/model"
    packages:
      - name: vosk
        version: "0.3.45"
        source: pip
      - name: nerd-dictation-git
        state: latest
        source: aur
        helper: paru
      - name: ydotool
        state: absent
        source: pacman
      - name: wtype
        state: latest
        source: pacman
    archives:
      - name: tts-model
        src: https://alphacephei.com/kaldi/models/vosk-model-small-en-us-0.15.zip
        dest: "{{ configs_home }}/nerd-dictation/model"
        remote_src: true
      - name: tts-model-lgraph
        src: https://alphacephei.com/vosk/models/vosk-model-en-us-0.22-lgraph.zip
        dest: "{{ configs_home }}/nerd-dictation/model"
        remote_src: true
  - name: vpn
    tag: vpn
    packages:
      - name: mullvad-vpn-cli
        state: latest
        source: aur
        helper: paru
    commands:
      - name: Allow for LAN access (split tunnel)
        cmd: mullvad lan set allow
        set_fact: mullvad lan get
        when_not_stdout: "Local network sharing setting: allow"
      - name: Disable auto connect
        cmd: mullvad auto-connect set off
        set_fact: mullvad auto-connect get
        when_not_stdout: "Autoconnect: off"
      - name: Set custom dns servers
        cmd: mullvad dns set custom 10.64.0.1 192.168.1.24
        set_fact: mullvad dns get
        when_not_stdout: |-
          Custom DNS: yes
          Servers:
          10.64.0.1
          192.168.1.24
